{
  "skinName": "dj",
  "title": "Help for data processing script",
  "description": "Full description with examples for commands of the DJ data processing script.",
  "keywords": [""],
  "isPublished": true,
  "appWidgets": [
  {
    "type": "language-selector",
    "instanceName": "language-selector",
    "showFlags": true
  },
  {
    "type": "page-list",
    "instanceName": "page-list-nav"
  },
  {
    "instanceName": "AppTopbar",
    "type": "v2.topbar",
    "icon": "/widgets/v2.topbar/icon.png",
    "decoration":
    {
      "languageSelector":
      {
        "enable": false,
        "showFlag": true,
        "showTitle": true
      },
      "loginButton": false,
      "gotoApps": false
    },
    "content": []
  }],
  "pages": [
  {
    "shortTitle": "help",
    "href": "",
    "template": "f-layout-home",
    "holders":
    {
      "banner":
      {
        "widgets": [
        {
          "enabled": true,
          "bgImage": "./img/dps-help.png",
          "type": "v2.banner",
          "instanceName": "39l9augpw7icde0213d8qto6r",
          "icon": "/widgets/v2.banner/icon.png"
        },
        {
          "text": "<hr id=\"null\">",
          "type": "htmlwidget",
          "instanceName": "hi9hwv97c7nua5wd7x8gxpqfr",
          "icon": "/widgets/htmlwidget/icon.png"
        }],
        "width": 1348
      },
      "header":
      {
        "widgets": [
        {
          "type": "v2.script-help",
          "instanceName": "1qqx5cex2ggi4nqgr2kbqyf1or",
          "icon": "/widgets/v2.script-help/icon.png"
        }],
        "width": 1200
      },
      "callout0":
      {
        "widgets": [],
        "width": 409
      },
      "callout1":
      {
        "widgets": [],
        "width": 409
      },
      "callout2":
      {
        "widgets": [],
        "width": 409
      },
      "main":
      {
        "widgets": [],
        "width": 1200
      },
      "feature0":
      {
        "widgets": [],
        "width": 307
      },
      "feature1":
      {
        "widgets": [],
        "width": 307
      },
      "feature2":
      {
        "widgets": [],
        "width": 307
      },
      "feature3":
      {
        "widgets": [],
        "width": 307
      },
      "footer":
      {
        "widgets": []
      }
    },
    "subscriptions": []
  },
  {
    "shortTitle": "test",
    "href": "test",
    "template": "left-right-bottom",
    "holders":
    {
      "banner":
      {
        "widgets": [],
        "width": 1358
      },
      "column":
      {
        "widgets": [
        {
          "type": "v2.script-help",
          "instanceName": "wktj6w8gmo8kf1ilumc84cxr",
          "icon": "/widgets/v2.script-help/icon.png"
        }],
        "width": 1200
      },
      "topleft":
      {
        "widgets": [
        {
          "type": "v2.script-suite",
          "instanceName": "hh9shzdx5ftmyd9xt7tn2vs4i",
          "icon": "/widgets/v2.script-suite/icon.png",
          "script":
          {
            "aggregate": "<?javascript\r\n    var nullCount = function(values){\r\n      return values.filter(function(d){\r\n          return d == null\r\n          \r\n      }).length\r\n    };\r\n?>\r\n\r\nset(\"f\")\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nagg(for:\"row\",add:[{{f.nullCount}}])\r\n\r\nprint()\r\nstring()",
            "append": "<?html\r\n    <h1>\r\n?>\r\nappend('hello')\r\nappend('</h1>')\r\n\r\n// or\r\n\r\n<?html hello ?>\r\nwrap('h1')\r\n\r\nprint()\r\nstring()",
            "area": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\nnorm(for:'col', mode:'log')\r\nformat(3)\r\n\r\narea(x:-1)\r\n\r\nprint()\r\nstring()",
            "bar": "load(\r\n    dataset:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\norder(by:-1, as:\"az\")\r\nlimit(s:1,l:3)\r\nbar()\r\n\r\nprint()\r\nstring()",
            "cache": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'json'\r\n)\r\nselect('$.metadata')\r\nextend()\r\ntranslate()\r\ncache()\r\nselect(\"$.data_id\")\r\n\r\nprint()\r\nstr()",
            "cluster": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nquery([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\nnorm(for:'col', mode:'log')\r\ncls(for:'row',count:2)\r\nformat(3)\r\n\r\nprint()\r\nstr()",
            "concat": "meta('$..dataset.topics')\r\nconcat()\r\nunique()\r\n",
            "context": "    context(value:'Hello')\r\n\r\n//or with aliases and defaults\r\n\r\n    ctx('Hello')\r\n   \r\n//or with injection\r\n\r\n    <?textHello?>\r\n\r\n//or get string from scope variable\r\n\r\n    set('a')\r\n    ctx({{a}})\r\n\r\nprint()str()",
            "correlation": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n  { dim:'time', as:'row'},\r\n  { dim:'indicator', as:'col'}\r\n])\r\n\r\ncorr(for:'col')\r\nformat(3)\r\n\r\nprint()string()",
            "count": "<?json\r\n\r\n[0,1,2]\r\n\r\n?>\r\n\r\ncount()\r\nset('count')\r\nget()\r\n\r\nprint()str()",
            "csv": "<?csv\r\n\r\nDATE;HOUR;MINUTE;AVG;MIN;MAX;HH;H;L;LL;MEASURE\r\n20160101;0;;143.73;;;;;;;Rh/h\r\n20160101;1;;143.79;;;;;;;Rh/h\r\n20160101;2;;143.68;;;;;;;Rh/h\r\n\r\n?>\r\n\r\njson()\r\n\r\nset('data')\r\n\r\n<?javascript\r\n    $scope.data = $scope.data.map(function(row){\r\n        return {\r\n            date: _util.parse.date(row.DATE,\"YYYYMMDD\"),\r\n            value: _util.parse.number(row.AVG),\r\n            units: row.MEASURE\r\n        }\r\n    })\r\n?>\r\n\r\nget('data')",
            "call": "lib(\n    url:'http://127.0.0.1:8088/api/extension', \n    as:'lib'\n)\n\nimport('lib.words.distance')\nrun()\nset('distances')\n\n\n<?javascript\n\n   var wordList = [\n        'lib', \n        'library', \n        \"liberty\",\n        \"February\",\n        \"abracadabra\"];\n        \n    $scope.result = [];\n    wordList.forEach(function(item_0){\n        wordList.forEach(function(item_1){\n            $scope.result.push({\n                tags:[item_0, item_1],\n                distance: $scope.distances.levenshtein(item_0, item_1)\n            });\n    \n        })    \n    });\n    \n?>\n\nreturn('result')",
            "dataset": "src(ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02')\r\njson()\r\ndataset()\r\nproj([{dim:'time', as:'row'},{dim:'indicator', as:'col'}])\r\n\r\n//or \r\n\r\nload(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02', \r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\n\r\n//or \r\n\r\nload(\r\n   ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02', \r\n   into:'data'\r\n)\r\n\r\n// other data processing ...\r\n\r\nget(var:'data', as:'dataset')\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\nprint()str()\r\n",
            "deps": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\ncorr(for:'col')\r\ndeps()\r\n\r\nprint()str()",
            "eval": "<?javascript\r\n    \r\n    var eqFirstMeta = function(a,b){\r\n      return a.metadata[0].id == b.metadata[0].id\r\n    }\r\n    \r\n    $scope.nullCount = function(values){\r\n        return values.filter(function(d){\r\n            return d == null\r\n        }).length\r\n    };\r\n\r\n?>\r\n\r\nset('f')\r\nget('f.eqFirstMeta')\r\ninfo()\r\n\r\nget('nullCount')\r\ninfo()\r\n\r\nlog()\r\n\r\nprint()str()",
            "export": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\nexport('data.csv')\r\n\r\nprint()str()",
            "filter": "<?javascript\r\n\r\n     var f1 = function(d){ return d < 0 };\r\n     \r\n     var f2 = function(d){ return d == 0 };\r\n     \r\n     $scope.f3 = function(d){ return d > 0 };\r\n\r\n?>\r\nset('filters')\r\n\r\n<?json\r\n\r\n [-2, -1, 0, 1, 2]\r\n\r\n?>\r\nset('data')\r\n\r\nfilter({{filters.f1}})\r\ninfo()\r\n\r\nget(var:'data'), as:'json')\r\nfilter({{filters.f2}})\r\ninfo()\r\n\r\nget(var:'data'), as:'json')\r\nfilter({{f3}})\r\ninfo()\r\nlog()\r\n\r\nprint()str()",
            "format": "load(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nformat(3)\r\n\r\nprint()str()",
            "get": "<?json \r\n    \"Hello\" \r\n?>\r\nset(\"str\")\r\n\r\n<?javascript \r\n    $scope.notNull = function(item){\r\n        return item != undefined\r\n    }; \r\n?>\r\n\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\", \r\n    as:'json'\r\n)\r\n\r\nselect(\"$.metadata.dataset.commit\")\r\n\r\nset(var:\"commitNote\", val:\"$[0].note\")\r\nget(\"str\")\r\ninfo()\r\nget(\"notNull\")\r\ninfo()\r\nget(\"commitNote\")\r\ninfo()\r\n// equals for previus\r\nget(\"$.commitNote\")\r\ninfo()\r\nlog()\r\n\r\nprint()str()",
            "group": "<?javascript\r\n   \r\n   $scope.mapper = function(d){\r\n       return {\r\n           key:d, \r\n           value:d\r\n       }\r\n   };\r\n   \r\n   $scope.transform = function(d){\r\n        return {\r\n            key:d.key, \r\n            count: d.values.length\r\n        }\r\n   };\r\n   \r\n   $scope.criteria = function(a,b){\r\n       return b.count-a.count\r\n   };\r\n   \r\n?>\r\n\r\nmeta('$..dataset.topics.*')\r\n\r\ngroup({{mapper}})\r\nmap({{transform}})\r\nsort({{criteria}})\r\n\r\nextend()\r\ntranslate()\r\nset('topics')\r\n\r\n<?javascript\r\n    $scope.topics = $scope.topics.map(function(item){\r\n        return {\r\n            tag: (item.key.label) ? item.key.label : item.key,\r\n            count: item.count\r\n        }\r\n    }); \r\n?>\r\n\r\nreturn('topics')\r\n\r\nprint()\r\nstr()",
            "hbar": "load(\r\n    dataset:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\norder(by:-1, as:\"az\")\r\nlimit(s:1,l:3)\r\nhbar()\r\n\r\nprint()str()\r\n",
            "help": "help(command:'context')\n\nprint()str()",
            "histogram": "\r\n// load data from dataset storage\r\n\r\n    load(\r\n        ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n        as:'dataset'\r\n    )\r\n\r\n\r\n// get data cube projection\r\n\r\n    proj([\r\n      { dim:'time', as:'row'},\r\n      {\r\n        dim:'indicator',\r\n        as:'col',\r\n        values:['NSMS_DAU001_NFD004']\r\n      }\r\n    ])\r\n\r\n\r\n// create histogramm\r\n\r\n    hist(for:'col', bins:7)\r\n    format(3)\r\n\r\n\r\n// create bar chart\r\n\r\n    bar()\r\n    \r\nprint()str()    ",
            "html": "<?html\r\n    <td style=\"font-size:x-small\">\r\n        <%=value%>\r\n    </td>    \r\n?>\r\nset('htmlTemplate')\r\n\r\n<?javascript\r\n    $scope.compiledHtml = _.template($scope.htmlTemplate);\r\n    $scope.rowMapper = function(d){\r\n      return \"<tr>\"+ d.value.map(function(v){\r\n         return $scope.compiledHtml({value:v})\r\n      }).join(\"\")+\"</tr>\"\r\n    };\r\n?>\r\n\r\n<?dps\r\n    map({{rowMapper}})\r\n    concat()\r\n    html()\r\n    wrapHtml(tag:\"table\", class:\"skin\", style:'background:#ded;')\r\n?>\r\nset(\"t2html\")\r\n\r\n\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nformat(2)\r\njson()\r\nselect(\"$.body.*\")\r\nrun({{t2html}})\r\n\r\nprint()str()",
            "import": "lib(\n    url:'http://127.0.0.1:8088/api/extension', \n    as:'lib'\n)\n\n// import html renderer for library description  \n// from library 'lib'\n\nimport(ext:'lib.help')\n\n// render library description loaded from url\n\nrun(url:'http://127.0.0.1:8088/api/extension')\n\nprint()str()",
            "imputation": "<?json\r\n    {\r\n  \"header\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"Col 0\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"Col 1\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"Col 2\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"body\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"0\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        366.71,\r\n        928.25,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"1\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"2\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        923.05,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"3\",\r\n          \"label\": \"3\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        927.38,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"4\",\r\n          \"label\": \"4\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        368.6,\r\n        928.18,\r\n        null\r\n      ]\r\n    }\r\n  ]\r\n}\r\n?>\r\n\r\ntable()\r\n\r\nremove(dir:\"col\", mode:'all')\r\nremove(dir:'row', mode:'all')\r\nimput(for:'col', from:'top', method:'fill')\r\n\r\n\r\nprint()str()",
            "info": "info(value:'Direct')\r\n\r\n<?text\r\n    Text injection! \r\n?>\r\n\r\ninfo()\r\nset('str')\r\ninfo('From var')\r\ninfo({{str}})\r\n\r\nlog()\r\n\r\nprint()str()",
            "join": "<?javascript\r\n\r\n    $scope.eqFirstMeta = function(a,b){\r\n      return a.metadata[0].id == b.metadata[0].id\r\n    };\r\n\r\n?>\r\n\r\nload(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    { dim:'time', as:'row'},\r\n    { dim:'indicator', as:'col'}\r\n])\r\n\r\nset('t1')\r\n\r\nnorm(for:'col', method:'0,1')\r\nset('t2')\r\n\r\nget(var:'t1', as:'table')\r\nnorm(for:'col', method:'std')\r\nset('t3')\r\n\r\nget(var:'t1', as:'table')\r\nnorm(dir:'col', method:'log')\r\nset('t4')\r\n\r\nget(var:'t1', as:'table')\r\n\r\njoin( \r\n    with:{{t2}}, \r\n    on:{{eqFirstMeta}}, \r\n    method:'left', \r\n    pref:'Ranged '\r\n)\r\n\r\njoin( \r\n    with:{{t3}}, \r\n    on:{{eqFirstMeta}},\r\n    method:'left', \r\n    pref:'Standartized '\r\n)\r\n\r\njoin( \r\n    with:{{t4}}, \r\n    on:{{eqFirstMeta}},\r\n    method:'left', \r\n    pref:'Logistic '\r\n)\r\n\r\nformat(3)\r\n\r\nprint()str()",
            "json": "<?json\r\n    [1,1,1]\r\n?>\r\nset('json')\r\n\r\n<?csv\r\n    a;b;c\r\n    1;2;3\r\n    4;5;6\r\n?>\r\njson()\r\nset('csv')\r\n\r\n<?xml\r\n    <a id=\"1\">\r\n        <b><![CDATA[<no parsed data> ]]> text value 0</b>\r\n        <b><![CDATA[<no parsed data> ]]> text value 1</b>\r\n        \r\n    </a>\r\n?>\r\njson()\r\nset('xml')\r\n\r\n<?html\r\n    <div id=\"1\">\r\n        <h2>Title</h2>\r\n        <div>Content</div>\r\n    </div>\r\n?>\r\njson()\r\nset('html')\r\n\r\nget()\r\n\r\nprint()str()",
            "last": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n  { dim:'time', as:'row'},\r\n  { dim:'indicator', as:'col'}\r\n])\r\n\r\nlast(for:'row', count:2)\r\nlast(for:'col', count:2)\r\n\r\nprint()str()",
            "library": "lib(\n    url:'http://127.0.0.1:8088/api/extension', \n    as:'lib'\n)\n\nimport('lib.words.distance')\nrun()\nset('distances')\n\n\n<?javascript\n\n   var wordList = [\n        'lib', \n        'library', \n        \"liberty\",\n        \"February\",\n        \"abracadabra\"];\n        \n    $scope.result = [];\n    wordList.forEach(function(item_0){\n        wordList.forEach(function(item_1){\n            $scope.result.push({\n                tags:[item_0, item_1],\n                distance: $scope.distances.levenshtein(item_0, item_1)\n            });\n    \n        })    \n    });\n    \n?>\n\nreturn('result')\n\nprint()str()",
            "limit": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\")\r\n    \r\nproj([\r\n    { dim:'time', as:'row'},\r\n    { dim:'indicator', as:'col'}\r\n])\r\n\r\nlimit(s:1,l:2)\r\n\r\nprint()str()",
            "line": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\")\r\n    \r\nproj([\r\n    { dim:'time', as:'row'},\r\n    { dim:'indicator', as:'col'}\r\n])\r\n\r\nnorm(for:'col', mode:'log')\r\nformat(3)\r\n\r\nline(x:-1)\r\n\r\nprint()str()",
            "logger": "info(value:'Direct')\r\n\r\n<?text\r\n    Text injection! \r\n?>\r\n\r\ninfo()\r\nset('str')\r\ninfo('From var')\r\ninfo({{str}})\r\n\r\nlog()\r\n\r\nprint()str()",
            "lookup": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'json'\r\n)\r\nselect('$.metadata')\r\nextend()\r\ntranslate()\r\n\r\nprint()str()",
            "map": "<?javascript\r\n   \r\n   $scope.mapper = function(d){\r\n       return {\r\n           key:d, \r\n           value:d\r\n       }\r\n   };\r\n   \r\n   $scope.transform = function(d){\r\n        return {\r\n            key:d.key, \r\n            count: d.values.length\r\n        }\r\n   };\r\n   \r\n   $scope.criteria = function(a,b){\r\n       return b.count-a.count\r\n   };\r\n   \r\n?>\r\n\r\nmeta('$..dataset.topics.*')\r\n\r\ngroup({{mapper}})\r\nmap({{transform}})\r\nsort({{criteria}})\r\n\r\nextend()\r\ntranslate()\r\nset('topics')\r\n\r\n<?javascript\r\n    $scope.topics = $scope.topics.map(function(item){\r\n        return {\r\n            tag: (item.key.label) ? item.key.label : item.key,\r\n            count: item.count\r\n        }\r\n    }); \r\n?>\r\n\r\nreturn('topics')\r\n\r\nprint()\r\nstr()",
            "merge": "<?json\r\n    {\r\n  \"header\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"Col 0\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"Col 1\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"Col 2\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"body\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"0\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        366.71,\r\n        928.25,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"1\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"2\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        923.05,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"3\",\r\n          \"label\": \"3\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        927.38,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"4\",\r\n          \"label\": \"4\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        368.6,\r\n        928.18,\r\n        null\r\n      ]\r\n    }\r\n  ]\r\n}\r\n?>\r\n\r\ntable()\r\n\r\nremove(dir:\"col\", mode:'all')\r\nremove(dir:'row', mode:'all')\r\n\r\nmerge(from:1, to:0)\r\n\r\nprint()str()",
            "metadata": "meta('$[?(@.dataset.source=='#WB')].dataset.id')",
            "normalize": "<?javascript\r\n\r\n    $scope.eqFirstMeta = function(a,b){\r\n      return a.metadata[0].id == b.metadata[0].id\r\n    };\r\n\r\n?>\r\n\r\nload(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    { dim:'time', as:'row'},\r\n    { dim:'indicator', as:'col'}\r\n])\r\n\r\nset('t1')\r\n\r\nnorm(for:'col', method:'0,1')\r\nset('t2')\r\n\r\nget(var:'t1', as:'table')\r\nnorm(for:'col', method:'std')\r\nset('t3')\r\n\r\nget(var:'t1', as:'table')\r\nnorm(dir:'col', method:'log')\r\nset('t4')\r\n\r\nget(var:'t1', as:'table')\r\n\r\njoin( \r\n    with:{{t2}}, \r\n    on:{{eqFirstMeta}}, \r\n    method:'left', \r\n    pref:'Ranged '\r\n)\r\n\r\njoin( \r\n    with:{{t3}}, \r\n    on:{{eqFirstMeta}},\r\n    method:'left', \r\n    pref:'Standartized '\r\n)\r\n\r\njoin( \r\n    with:{{t4}}, \r\n    on:{{eqFirstMeta}},\r\n    method:'left', \r\n    pref:'Logistic '\r\n)\r\n\r\nformat(3)\r\n\r\nprint()str()",
            "order": "load(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\norder(for:\"row\",by:-1, as:\"az\")\r\n\r\nformat(2)\r\n\r\n\r\nprint()str()",
            "pca": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\"\r\n)\r\n\r\nproj([\r\n  { dim:'time', role:'row', items:[] },\r\n  { dim:'indicator', role:'col', items:[] }\r\n])\r\n\r\npca(for:'row',return:'scores')\r\n\r\n\r\nprint()str()",
            "pie": "load(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nnorm(for:'row',method:'log')\r\nformat(1)\r\norder(by:-1, as:\"az\")\r\nlimit()\r\n\r\npie()\r\n\r\n\r\nprint()str()",
            "print": "load(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nnorm(for:'row',method:'log')\r\nformat(1)\r\norder(by:-1, as:\"az\")\r\nlimit()\r\n\r\npie()\r\nprint()\r\n",
            "projection": "src(ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02')\r\njson()\r\ndataset()\r\nproj([{dim:'time', as:'row'},{dim:'indicator', as:'col'}])\r\n\r\n//or \r\n\r\nload(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02', \r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\n\r\n//or \r\n\r\nload(\r\n   ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02', \r\n   into:'data'\r\n)\r\n\r\n// other data processing ...\r\n\r\nget(var:'data', as:'dataset')\r\n\r\nproj([\r\n    {dim:'time', as:'row'},\r\n    {dim:'indicator', as:'col'}\r\n])\r\n\r\nprint()str()\r\n",
            "radar": "load(\r\n    dataset:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\norder(by:-1, as:\"az\")\r\nlimit(s:1,l:3)\r\nradar()\r\n\r\nprint()str()",
            "rank": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\"\r\n)\r\nproj([\r\n  { dim:'time', role:'row', items:[] },\r\n  { dim:'indicator', role:'col', items:[] }\r\n])\r\n\r\nrank(for:\"col\",items:[0],as:\"az\")\r\n\r\norder(by:0, as:\"az\")\r\n\r\nprint()str()",
            "reducenulls": "<?json\r\n    {\r\n  \"header\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"Col 0\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"Col 1\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"Col 2\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"body\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"0\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        366.71,\r\n        928.25,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"1\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"2\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        923.05,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"3\",\r\n          \"label\": \"3\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        927.38,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"4\",\r\n          \"label\": \"4\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        368.6,\r\n        928.18,\r\n        null\r\n      ]\r\n    }\r\n  ]\r\n}\r\n?>\r\n\r\ntable()\r\n\r\nremove(dir:\"col\", mode:'all')\r\nremove(dir:'row', mode:'all')\r\n\r\nmerge(from:1, to:0)\r\n\r\nprint()str()",
            "return": "load(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\", \r\n    as:'json'\r\n)\r\n\r\nselect(\"$.metadata.dataset.commit\")\r\n\r\nset(var:\"commitNote\", val:\"$[0].note\")\r\n\r\nreturn(\"commitNote\")\r\n\r\nprint()str()",
            "run": "<?html\r\n    <td style=\"font-size:x-small\">\r\n        <%=value%>\r\n    </td>    \r\n?>\r\nset('htmlTemplate')\r\n\r\n<?javascript\r\n    $scope.compiledHtml = _.template($scope.htmlTemplate);\r\n    $scope.rowMapper = function(d){\r\n      return \"<tr>\"+ d.value.map(function(v){\r\n         return $scope.compiledHtml({value:v})\r\n      }).join(\"\")+\"</tr>\"\r\n    };\r\n?>\r\n\r\n<?dps\r\n    map({{rowMapper}})\r\n    concat()\r\n    html()\r\n    wrapHtml(tag:\"table\", class:\"skin\", style:'background:#ded;')\r\n?>\r\nset(\"t2html\")\r\n\r\n\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nformat(2)\r\njson()\r\nselect(\"$.body.*\")\r\nrun({{t2html}})\r\n\r\nprint()str()",
            "scatter": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\")\r\n    \r\nproj([\r\n    { dim:'time', as:'row'},\r\n    { dim:'indicator', as:'col'}\r\n])\r\n\r\nnorm(for:'col', mode:'log')\r\nformat(3)\r\n\r\nscatter(x:-1)\r\n\r\nprint()str()",
            "select": "<?json\r\n    [3, -1, 0, 1, 2]\r\n?>\r\n\r\nset('source')\r\nselect('$[0]')\r\nset('first')\r\nget('source')\r\nselect('$[?(@>1)]')\r\nset('second')\r\nget()\r\n\r\nprint()str()",
            "set": "<?json \r\n    \"Hello\" \r\n?>\r\nset(\"str\")\r\n\r\n<?javascript \r\n    $scope.notNull = function(item){\r\n        return item != undefined\r\n    }; \r\n?>\r\n\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\", \r\n    as:'json'\r\n)\r\n\r\nselect(\"$.metadata.dataset.commit\")\r\n\r\nset(var:\"commitNote\", val:\"$[0].note\")\r\nget(\"str\")\r\ninfo()\r\nget(\"notNull\")\r\ninfo()\r\nget(\"commitNote\")\r\ninfo()\r\n// equals for previus\r\nget(\"$.commitNote\")\r\ninfo()\r\nlog()\r\n\r\nprint()str()",
            "shift": "<?javascript\r\n\r\n    $scope.eqFirstMeta = function(a,b){\r\n      return a.metadata[0].id == b.metadata[0].id\r\n    };\r\n\r\n?>\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\",items:[\"NSMS_DAU001_NFD004\"]}\r\n])\r\n\r\norder(for:\"row\",as:\"az\", by:-1)\r\nnorm(for:\"col\",method:\"std\")\r\nformat(1)\r\n\r\nset('srcSerie')\r\n\r\nshift(for:\"col\", interval:-3, series:[0])\r\n\r\njoin(\r\n    with:{{srcSerie}}, \r\n    on:{{eqFirstMeta}},\r\n    method:'left',\r\n    pref:'srcSerie: '\r\n)\r\n\r\nline(x:-1,y:[0,1])\r\n\r\nprint()str()",
            "smoose": "// Write smoose script here",
            "sort": "<?javascript\r\n   \r\n   $scope.mapper = function(d){\r\n       return {\r\n           key:d, \r\n           value:d\r\n           \r\n       }\r\n   };\r\n   \r\n   $scope.transform = function(d){\r\n        return {\r\n            key:d.key, \r\n            count: d.values.length\r\n        }\r\n   };\r\n   \r\n   $scope.criteria = function(a,b){\r\n       return b.count-a.count\r\n   };\r\n   \r\n?>\r\n\r\nmeta('$..dataset.topics.*')\r\n\r\ngroup({{mapper}})\r\nmap({{transform}})\r\nsort({{criteria}})\r\n\r\nextend()\r\ntranslate()\r\n\r\nprint()str()",
            "source": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'dataset')\r\n\r\nload(\r\n    cache:'5855481930d9ae60277a474a',\r\n    as:'table'\r\n)\r\n\r\nimport(\r\n    url:'http://127.0.0.1:8080/api/resource/scripting-js.js',\r\n    as:'javascript'\r\n)\r\n\r\nload(\r\n    url:'http://127.0.0.1:8080/api/resource/scripting-csv.csv',\r\n    as:'csv'\r\n)\r\n\r\nload(\r\n    url:'http://127.0.0.1:8080/api/resource/scripting-xml.xml',\r\n    as:'xml'\r\n)\r\n\r\nload(\r\n    url:'http://127.0.0.1:8088',\r\n    as:'html'\r\n)",
            "string": "<?json\r\n    [1,1,1]\r\n?>\r\n\r\ntext()\r\nset(\"text_0\")\r\njson()\r\nset('json')\r\ntext()\r\nset('text_1')\r\nget()\r\n\r\nprint()str()",
            "table": "<?json\r\n    {\r\n  \"header\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"Col 0\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"Col 1\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"Col 2\",\r\n          \"dimension\": \"Columns\",\r\n          \"dimensionLabel\": \"Columns\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"body\": [\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"0\",\r\n          \"label\": \"0\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        366.71,\r\n        928.25,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"1\",\r\n          \"label\": \"1\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"2\",\r\n          \"label\": \"2\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        923.05,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"3\",\r\n          \"label\": \"3\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        null,\r\n        927.38,\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      \"metadata\": [\r\n        {\r\n          \"id\": \"4\",\r\n          \"label\": \"4\",\r\n          \"dimension\": \"Rows\",\r\n          \"dimensionLabel\": \"Rows\",\r\n          \"role\": \"metric\"\r\n        }\r\n      ],\r\n      \"value\": [\r\n        368.6,\r\n        928.18,\r\n        null\r\n      ]\r\n    }\r\n  ]\r\n}\r\n?>\r\n\r\ntable()\r\n\r\nremove(dir:\"col\", mode:'all')\r\nremove(dir:'row', mode:'all')\r\n\r\nmerge(from:1, to:0)\r\n\r\nprint()str()",
            "translate": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:'json'\r\n)\r\nselect('$.metadata')\r\nextend()\r\ntranslate()\r\n\r\nprint()str()",
            "transpose": "load(\r\n    ds:'47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02',\r\n    as:\"dataset\"\r\n)\r\nproj([\r\n  { dim:'time', role:'row', items:[] },\r\n  { dim:'indicator', role:'col', items:[] }\r\n])\r\ntranspose()\r\n\r\nprint()str()",
            "unique": "<?json\r\n    [3,1,3,2,2,2,3,1,1,3,2]\r\n?>\r\n\r\nunique()\r\n\r\nprint()str()",
            "version": "version()\n\nprint()str()",
            "wrapHtml": "<?html\r\n    <td style=\"font-size:x-small\">\r\n        <%=value%>\r\n    </td>    \r\n?>\r\nset('htmlTemplate')\r\n\r\n<?javascript\r\n    $scope.compiledHtml = _.template($scope.htmlTemplate);\r\n    $scope.rowMapper = function(d){\r\n      return \"<tr>\"+ d.value.map(function(v){\r\n         return $scope.compiledHtml({value:v})\r\n      }).join(\"\")+\"</tr>\"\r\n    };\r\n?>\r\n\r\n<?dps\r\n    map({{rowMapper}})\r\n    concat()\r\n    html()\r\n    wrapHtml(tag:\"table\", class:\"skin\", style:'background:#ded;')\r\n?>\r\nset(\"t2html\")\r\n\r\n\r\n\r\nload(\r\n    ds:\"47611d63-b230-11e6-8a1a-0f91ca29d77e_2016_02\",\r\n    as:'dataset'\r\n)\r\n\r\nproj([\r\n    {dim:\"time\", as:\"row\"},\r\n    {dim:\"indicator\",as:\"col\"}\r\n])\r\n\r\nformat(2)\r\njson()\r\nselect(\"$.body.*\")\r\nrun({{t2html}})\r\n\r\nprint()str()",
            "xml": "load(\r\n    url:'http://127.0.0.1:8080/api/resource/scripting-xml.xml',\r\n    as:'xml'\r\n)\r\njson()\r\nset(\"external\")\r\n\r\n<?xml\r\n    <a><b>text</b></a>\r\n?>\r\njson()\r\nset('internal')\r\n\r\n\r\nget()\r\n\r\nprint()str()",
            "@async": "@async(promise:'p[0]')\r\n<?json\r\n{\"index\":0}\r\n?>\r\nset('data')\r\n@sync(vars:['data[0]'], values:['data'])\r\n\r\n@async(promise:'p[1]')\r\n<?json\r\n{\"index\":1}\r\n?>\r\nset('data')\r\n@sync(vars:['data[1]'], values:['data'])\r\n@all({{p}})\r\nget('data')",
            "@all": "@async(promise:'p[0]')\r\n<?json\r\n{\"index\":0}\r\n?>\r\nset('data')\r\n@sync(vars:['data[0]'], values:['data'])\r\n\r\n@async(promise:'p[1]')\r\n<?json\r\n{\"index\":1}\r\n?>\r\nset('data')\r\n@sync(vars:['data[1]'], values:['data'])\r\n@all({{p}})\r\nget('data')",
            "@any": "@async(promise:'p[0]')\r\n<?json\r\n{\"index\":0}\r\n?>\r\nset('data')\r\n@sync(vars:['data[0]'], values:['data'])\r\n\r\n@async(promise:'p[1]')\r\n<?json\r\n{\"index\":1}\r\n?>\r\nset('data')\r\n@sync(vars:['data[1]'], values:['data'])\r\n@all({{p}})\r\nget('data')"
          },
          "d_listeners": "res"
        }],
        "width": 659
      },
      "topright":
      {
        "widgets": [
        {
          "title": "Script Result",
          "extention": true,
          "scroll": true,
          "height": 250,
          "type": "v2.script-result",
          "instanceName": "res",
          "icon": "/widgets/v2.script-result/icon.png"
        }],
        "width": 659
      },
      "bottom":
      {
        "widgets": [],
        "width": 1200
      }
    },
    "subscriptions": [
    {
      "emitter": "hh9shzdx5ftmyd9xt7tn2vs4i",
      "receiver": "res",
      "signal": "setData",
      "slot": "setData"
    }]
  }],
  "name": "Dj dps help",
  "i18n":
  {},
  "icon": "/img/app.png",
  "dps": "https://dj-dps.herokuapp.com",
  "importedFromURL": "http://dj-app.herokuapp.com/app/Dj dps help",
  "importedFromAuthor": "Andrey Boldak"
}
